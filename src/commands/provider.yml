description: Update a provider to latest

parameters:
  args:
    description: Arguments for tfupdate command
    type: string
    default: '-r ./'
  base_branch:
    description: A base branch name to update
    type: string
    default: master
  provider_name:
    description: A name of provider
    type: string
  assignees:
    description: A comma-separated list (no spaces around the comma) of GitHub handles to assign to this pull request
    type: string
    default: ''

steps:
  - deploy:
      name: Update terraform-provider-<< parameters.provider_name >> to latest
      command: |
        VERSION=$(tfupdate release latest terraform-providers/terraform-provider-<< parameters.provider_name >>)
        UPDATE_MESSAGE="[tfupdate] Update terraform-provider-<< parameters.provider_name >> to v${VERSION}"
        if hub pr list -s "open" -f "%t: %U%n" | grep -F "$UPDATE_MESSAGE"; then
          echo "A pull request already exists"
        elif hub pr list -s "merged" -f "%t: %U%n" | grep -F "$UPDATE_MESSAGE"; then
          echo "A pull request is already merged"
        else
          git checkout -b update-terraform-provider-<< parameters.provider_name >>-to-v${VERSION} origin/<< parameters.base_branch >>
          tfupdate provider << parameters.provider_name >> -v ${VERSION} << parameters.args >>
          if git add . && git diff --cached --exit-code --quiet; then
            echo "No changes"
          else
            git commit -m "$UPDATE_MESSAGE"
            PULL_REQUEST_BODY="For details see: https://github.com/terraform-providers/terraform-provider-<< parameters.provider_name >>/releases"
            if [ -n "<< parameters.assignees >>" ]; then
              git push origin HEAD && hub pull-request -m "$UPDATE_MESSAGE" -m "$PULL_REQUEST_BODY" -b << parameters.base_branch >> -a "<< parameters.assignees >>"
            else
              git push origin HEAD && hub pull-request -m "$UPDATE_MESSAGE" -m "$PULL_REQUEST_BODY" -b << parameters.base_branch >>
            fi
          fi
        fi
